generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MasterActionPlan {
  id                 Int                @id @default(autoincrement())
  createdAt          DateTime?          @default(now())
  modifiedAt         DateTime?
  createdBy          String
  modifiedBy         String?
  isActive           Boolean?           @default(true)
  year               Int
  preparedBy         String             @db.VarChar(255)
  preparedByPosition String             @db.VarChar(255)
  approver           String             @db.VarChar(255)
  approverPosition   String             @db.VarChar(255)
  MasterIndicators   MasterIndicators[]
}

model MasterIndicators {
  id                    Int               @id @default(autoincrement())
  createdAt             DateTime?         @default(now())
  modifiedAt            DateTime?
  createdBy             String
  modifiedBy            String?
  isActive              Boolean?          @default(true)
  code                  String            @db.VarChar(50)
  plannedDateStart      DateTime
  plannedDateEnd        DateTime
  plannedBudget         Float
  plannedMagnitude      Float
  responsibleOffice     String            @db.VarChar(255)
  sourceOfFound         Int
  budgetaryRequirements Float
  target                Float
  subCategory           String            @db.VarChar(255)
  category              String            @db.VarChar(255)
  description           String
  objectives            String
  group                 String            @db.VarChar(255)
  masterActionPlanId    Int?
  MasterActionPlan      MasterActionPlan? @relation(fields: [masterActionPlanId], references: [id])
}

model MasterTable {
  id                Int                 @id @default(autoincrement())
  createdAt         DateTime?           @default(now())
  modifiedAt        DateTime?
  createdBy         String
  modifiedBy        String?
  isActive          Boolean?            @default(true)
  title             String              @db.VarChar(255)
  MasterTableDetail MasterTableDetail[]
}

model MasterTableDetail {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime?   @default(now())
  modifiedAt  DateTime?
  createdBy   String
  modifiedBy  String?
  isActive    Boolean?    @default(true)
  title       String      @db.VarChar(255)
  value       String      @db.VarChar(255)
  headerId    Int
  MasterTable MasterTable @relation(fields: [headerId], references: [id])
}

model Product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime
  title     String   @db.VarChar(255)
  content   String?
  price     Float
  ownerId   Int
  User      User     @relation(fields: [ownerId], references: [id])
}

model TxnOPCR {
  id             Int              @id @default(autoincrement())
  createdAt      DateTime?        @default(now())
  modifiedAt     DateTime?
  createdBy      String
  modifiedBy     String?
  isActive       Boolean?         @default(true)
  Year           Int
  office         String           @db.VarChar(50)
  startDate      DateTime
  endDate        DateTime
  TxtOPCRdetails TxtOPCRdetails[]
}

model TxnQAMR {
  id             Int              @id @default(autoincrement())
  createdAt      DateTime?        @default(now())
  modifiedAt     DateTime?
  createdBy      String
  modifiedBy     String?
  isActive       Boolean?         @default(true)
  year           Int
  office         String           @db.VarChar(50)
  TxnQAMRdetails TxnQAMRdetails[]
}

model TxnQAMRdetails {
  id             Int       @id @default(autoincrement())
  createdAt      DateTime? @default(now())
  modifiedAt     DateTime?
  createdBy      String
  modifiedBy     String?
  isActive       Boolean?  @default(true)
  qamrId         Int
  actionPlanCode String
  reason         String    @db.VarChar(255)
  remarks        String    @db.VarChar(255)
  headerId       Int?
  TxnQAMR        TxnQAMR?  @relation(fields: [headerId], references: [id])
}

model TxtOPCRdetails {
  id               Int       @id @default(autoincrement())
  createdAt        DateTime? @default(now())
  modifiedAt       DateTime?
  createdBy        String
  modifiedBy       String?
  isActive         Boolean?  @default(true)
  actionPlanCode   String
  actualMagtinude  Float
  actualBudget     Float
  actualDateStart  DateTime
  actualDateEnd    DateTime
  ratingQuality    Float
  ratingEfficiency Float
  timeliness       Float
  average          Float
  remarks          Float
  opcrId           Int
  headerId         Int?
  TxnOPCR          TxnOPCR?  @relation(fields: [headerId], references: [id])
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  name     String?
  password String
  salt     String
  Product  Product[]
}
