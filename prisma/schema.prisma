// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  name     String?
  password String
  salt     String
  products Product[]
}

model Product {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  price     Float
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   Int
}

model MasterTable {
  id         Int                 @id @default(autoincrement())
  createdAt  DateTime            @default(now())
  modifiedAt DateTime            @default(now())
  createdBy  Int
  modifiedBy Int
  isActive   Boolean
  title      String              @db.VarChar(255)
  details    MasterTableDetail[]


}

model MasterTableDetail {
  id         Int         @id @default(autoincrement())
  createdAt  DateTime    @default(now())
  modifiedAt DateTime    @default(now())
  createdBy  Int
  modifiedBy Int
  isActive   Boolean
  title      String      @db.VarChar(255)
  value      String      @db.VarChar(255)
  header     MasterTable @relation(fields: [headerId], references: [id])
  headerId   Int
}

model MasterActionPlan {
  id                 Int                @id @default(autoincrement())
  createdAt          DateTime           @default(now())
  modifiedAt         DateTime           @default(now())
  createdBy          Int
  modifiedBy         Int
  isActive           Boolean
  year               Int
  preparedBy         String             @db.VarChar(255)
  preparedByPosition String             @db.VarChar(255)
  approver           String             @db.VarChar(255)
  approverPosition   String             @db.VarChar(255)
  indicators         MasterIndicators[]
}

model MasterIndicators {
  id                    Int      @id @default(autoincrement())
  createdAt             DateTime @default(now())
  modifiedAt            DateTime @default(now())
  createdBy             Int
  modifiedBy            Int
  isActive              Boolean
  code                  String   @db.VarChar(50)
  plannedDateStart      DateTime
  plannedDateEnd        DateTime
  plannedBudget         Float
  plannedMagnitude      Float
  responsibleOffice     String   @db.VarChar(255)
  sourceOfFound         Int
  budgetaryRequirements Float
  target                Float
  subCategory           String   @db.VarChar(255)
  category              String   @db.VarChar(255)
  description           String
  objectives            String
  group                 String   @db.VarChar(255)

  masterActionPlan   MasterActionPlan? @relation(fields: [masterActionPlanId], references: [id])
  masterActionPlanId Int?
}

model TxnOPCR {
  id               Int              @id @default(autoincrement())
  creationDate     DateTime         @default(now())
  modificationDate DateTime         @default(now())
  createdBy        Int
  modifiedBy       Int
  isActive         Boolean
  Year             Int
  office           String           @db.VarChar(50)
  startDate        DateTime
  endDate          DateTime
  details          TxtOPCRdetails[]
}

model TxtOPCRdetails {
  id               Int      @id @default(autoincrement())
  actionPlanCode   String
  actualMagtinude  Float
  actualBudget     Float
  actualDateStart  DateTime
  actualDateEnd    DateTime
  ratingQuality    Float
  ratingEfficiency Float
  timeliness       Float
  average          Float
  remarks          Float
  creationDate     DateTime @default(now())
  modificationDate DateTime @default(now())
  createdBy        Int
  modifiedBy       Int
  isActive         Boolean
  opcrId           Int
  header           TxnOPCR? @relation(fields: [headerId], references: [id])
  headerId         Int?
}

model TxnQAMR {
  id               Int              @id @default(autoincrement())
  creationDate     DateTime         @default(now())
  modificationDate DateTime         @default(now())
  createdBy        Int
  modifiedBy       Int
  isActive         Boolean
  year             Int
  office           String           @db.VarChar(50)
  details          TxnQAMRdetails[]
}

model TxnQAMRdetails {
  id               Int      @id @default(autoincrement())
  creationDate     DateTime @default(now())
  modificationDate DateTime @default(now())
  createdBy        Int
  modifiedBy       Int
  isActive         Boolean
  qamrId           Int
  actionPlanCode   String
  reason           String   @db.VarChar(255)
  remarks          String   @db.VarChar(255)
  header           TxnQAMR? @relation(fields: [headerId], references: [id])
  headerId         Int?
}
